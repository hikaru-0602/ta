# 🔧 GitHub Actions CI設定
# このファイルは、コードがプッシュされた時に自動でテストとビルドを実行します

name: CI

# 🚀 いつCIを実行するか
on:
  push:
    branches: [main, develop] # mainとdevelopブランチにプッシュされた時
  pull_request:
    branches: [main] # mainブランチへのプルリクエスト時

# 💼 並行実行の制御（同じブランチの古いCIをキャンセル）
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 🔐 Firebase環境変数の設定（全体）
env:
  NEXT_PUBLIC_API_KEY: ${{ secrets.NEXT_PUBLIC_API_KEY }}
  NEXT_PUBLIC_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_AUTH_DOMAIN }}
  NEXT_PUBLIC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
  NEXT_PUBLIC_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_STORAGE_BUCKET }}
  NEXT_PUBLIC_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_MESSAGING_SENDER_ID }}
  NEXT_PUBLIC_APP_ID: ${{ secrets.NEXT_PUBLIC_APP_ID }}
  NEXT_PUBLIC_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_MEASUREMENT_ID }}
  NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}

# 🛠️ 実行する作業の定義
jobs:
  test:
    name: 🧪 テストとビルド
    runs-on: ubuntu-latest # Ubuntu環境で実行

    strategy:
      matrix:
        node-version: [18, 20] # Node.js 18と20でテスト

    steps:
      # 📥 ソースコードの取得
      - name: ソースコードをチェックアウト
        uses: actions/checkout@v4

      # 🟢 Node.jsの環境セットアップ
      - name: Node.js ${{ matrix.node-version }} をセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm" # npm キャッシュを有効化

      # 📦 依存関係のインストール
      - name: 依存関係をインストール
        run: npm ci

      # 🔍 型チェック（TypeScript）
      - name: TypeScript型チェック
        run: npm run type-check

      # 🧪 テストの実行
      - name: テストを実行
        run: npm run test:ci

      # 🏗️ ビルドの確認
      - name: Next.jsビルド
        run: npm run build

  # 📊 テストカバレッジの計測（追加の job）
  coverage:
    name: 📊 テストカバレッジ
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' # プルリクエスト時のみ実行

    steps:
      - name: ソースコードをチェックアウト
        uses: actions/checkout@v4

      - name: Node.js をセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: 依存関係をインストール
        run: npm ci

      - name: カバレッジ付きテスト実行
        run: npm run test -- --coverage --watchAll=false

      # 📈 カバレッジレポートをコメントに表示
      - name: カバレッジレポートをPRにコメント
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
        continue-on-error: true
